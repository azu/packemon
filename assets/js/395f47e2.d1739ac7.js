"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6801],{5318:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7378);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(t),f=a,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7791:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=t(5773),a=t(808),i=(t(7378),t(5318)),o=["components"],c={title:"Advanced"},l=void 0,s={unversionedId:"advanced",id:"advanced",isDocsHomePage:!1,title:"Advanced",description:"Creating binary files",source:"@site/docs/advanced.md",sourceDirName:".",slug:"/advanced",permalink:"/docs/advanced",editUrl:"https://github.com/milesj/packemon/edit/master/website/docs/advanced.md",version:"current",frontMatter:{title:"Advanced"},sidebar:"docs",previous:{title:"watch",permalink:"/docs/watch"}},p=[{value:"Creating binary files",id:"creating-binary-files",children:[]},{value:"Version constraints",id:"version-constraints",children:[]}],u={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"creating-binary-files"},"Creating binary files"),(0,i.kt)("p",null,"A binary is an executable file distributed in an NPM package via the\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/files/package.json#bin"},"bin")," field. Packemon offers first class support for\nbinary files by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Prepending a ",(0,i.kt)("inlineCode",{parentName:"li"},"#!/usr/bin/env node")," shebang to the output file. Do not include this in the source\nfile!"),(0,i.kt)("li",{parentName:"ul"},"Updating the ",(0,i.kt)("inlineCode",{parentName:"li"},"bin")," field in ",(0,i.kt)("inlineCode",{parentName:"li"},"package.json")," to the output file (if not already defined).")),(0,i.kt)("p",null,"To make use of this functionality, you must define an ",(0,i.kt)("a",{parentName:"p",href:"/docs/config#inputs"},"input")," with the name\n",(0,i.kt)("inlineCode",{parentName:"p"},"bin"),", like so."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n    "name": "package",\n    "packemon": {\n        "inputs": {\n            "bin": "src/bin.ts"\n        },\n        "platform": "node"\n    }\n}\n')),(0,i.kt)("p",null,"The contents of the binary source file can be whatever you want, but do be aware that code in the\nmodule scope will be executed immediately when the file is executed by Node.js."),(0,i.kt)("h2",{id:"version-constraints"},"Version constraints"),(0,i.kt)("p",null,"If you're using packemon as a global dependency and want to ensure all contributors of your project\nare using the correct packemon version, you can provide an ",(0,i.kt)("inlineCode",{parentName:"p"},"engines")," constraint to your root\n",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n    "name": "package",\n    "engines": {\n        "packemon": "^1.0.0"\n    }\n}\n')))}d.isMDXComponent=!0}}]);