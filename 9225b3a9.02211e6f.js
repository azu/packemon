(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{67:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(2),l=n(6),i=(n(0),n(76)),r={title:"Package configuration"},o={unversionedId:"config",id:"config",isDocsHomePage:!1,title:"Package configuration",description:"Packemon has been designed to build and prepare packages for distribution, and as such, supports",source:"@site/docs/config.md",slug:"/config",permalink:"/docs/config",editUrl:"https://github.com/milesj/packemon/edit/master/website/docs/config.md",version:"current",sidebar:"docs",previous:{title:"Setup & requirements",permalink:"/docs/setup"},next:{title:"Building packages",permalink:"/docs/build"}},b=[{value:"Platforms",id:"platforms",children:[]},{value:"Support",id:"support",children:[{value:"Legend",id:"legend",children:[]}]},{value:"Formats",id:"formats",children:[{value:"Node",id:"node",children:[]},{value:"Browser",id:"browser",children:[]}]},{value:"Inputs",id:"inputs",children:[]},{value:"Namespace",id:"namespace",children:[]}],c={rightToc:b};function p(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Packemon has been designed to build and prepare packages for distribution, and as such, supports\nworkspaces (monorepos) or single packages (solorepos). By default, only packages configured for\nPackemon will be built. This allows specific packages to be completely ignored if need be."),Object(i.b)("p",null,"To configure a package, add a ",Object(i.b)("inlineCode",{parentName:"p"},"packemon")," block to their ",Object(i.b)("inlineCode",{parentName:"p"},"package.json"),", with any of the following\noptional options. We suggest defining a platform at minimum."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="package.json"',title:'"package.json"'}),'{\n  "name": "package",\n  "packemon": {\n    "platform": "node"\n  }\n}\n')),Object(i.b)("h2",{id:"platforms"},"Platforms"),Object(i.b)("p",null,"The platform in which built code will be ran."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"node")," - Node.js runtime."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"browser")," ",Object(i.b)("em",{parentName:"li"},"(default)")," - Web browsers on desktop and mobile.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "platform": "browser"\n}\n')),Object(i.b)("p",null,"To support multiple platforms, pass an array."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "platform": ["browser", "node"]\n}\n')),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"In the future, we hope to support other platforms like Electron and React Native.")),Object(i.b)("h2",{id:"support"},"Support"),Object(i.b)("p",null,"The supported environment and or version for the configured platform(s)."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"legacy")," - An unsupported version. Only exists for legacy projects and systems."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"stable")," ",Object(i.b)("em",{parentName:"li"},"(default)")," - The oldest supported version, typically a version in LTS maintenance mode."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"current")," - The current supported LTS version."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"experimental")," - The newest version, typically not yet released for LTS. Is experimental or\nunstable.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "support": "current"\n}\n')),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"We suggest leaving this setting at ",Object(i.b)("inlineCode",{parentName:"p"},"stable")," for all libraries, as it offers the widest range of\nsupport for consumers.")),Object(i.b)("h3",{id:"legend"},"Legend"),Object(i.b)("p",null,"The supported environments above map to the following platform targets."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null})),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Legacy"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Stable"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Current"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Experimental"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Node"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),">= 8.10.0"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),">= 10.3.0"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),">= 12.0.0"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),">= 14.13.0")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Browser"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),">= IE 10"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),">= IE 11"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"> 0.5% usage"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"last 2 chrome versions")))),Object(i.b)("h2",{id:"formats"},"Formats"),Object(i.b)("p",null,"The output format for each platform build target. Each format will create a folder relative to the\nproject root that will house the built files."),Object(i.b)("h3",{id:"node"},"Node"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"lib")," ",Object(i.b)("em",{parentName:"li"},"(default)")," - ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://nodejs.org/api/modules.html"}),"CommonJS")," output using ",Object(i.b)("inlineCode",{parentName:"li"},".js")," file\nextension. For standard JavaScript and TypeScript projects."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"cjs")," - ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://nodejs.org/api/modules.html"}),"CommonJS")," output using ",Object(i.b)("inlineCode",{parentName:"li"},".cjs")," file extension. Source\nfiles must be written in CommonJS (",Object(i.b)("inlineCode",{parentName:"li"},".cjs"),") and ",Object(i.b)("inlineCode",{parentName:"li"},"require")," paths must use trailing extensions."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"mjs")," - ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://nodejs.org/api/esm.html"}),"ECMAScript module")," output using ",Object(i.b)("inlineCode",{parentName:"li"},".mjs")," file extension.\nSource files must be written in ESM (",Object(i.b)("inlineCode",{parentName:"li"},".mjs"),") and ",Object(i.b)("inlineCode",{parentName:"li"},"import")," paths must use trailing extensions.")),Object(i.b)("h3",{id:"browser"},"Browser"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"lib")," ",Object(i.b)("em",{parentName:"li"},"(default)")," - CommonJS output using ",Object(i.b)("inlineCode",{parentName:"li"},".js")," file extension. For standard JavaScript and\nTypeScript projects."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"esm")," ",Object(i.b)("em",{parentName:"li"},"(default)")," - ECMAScript module output using ",Object(i.b)("inlineCode",{parentName:"li"},".js")," file extension. The same as ",Object(i.b)("inlineCode",{parentName:"li"},"lib"),", but\nuses ",Object(i.b)("inlineCode",{parentName:"li"},"import/export")," instead of ",Object(i.b)("inlineCode",{parentName:"li"},"require"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"umd")," - Universal Module Definition output using ",Object(i.b)("inlineCode",{parentName:"li"},".js")," file extension. Meant to be used directly\nin the browser (via CDN) instead of being bundled. Will be automatically enabled if\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#namespace"}),"namespace")," is provided and using default formats.")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "format": "lib"\n}\n')),Object(i.b)("p",null,"To support multiple formats, or cross-platform formats, pass an array."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "format": ["lib", "cjs", "esm", "umd"]\n}\n')),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,"A mapping of entry points for the library, where the object key is the name of the output file to be\nbuilt (without extension), and the value is an input source file relative to the package root."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "inputs": {\n    "index": "src/index.ts",\n    "client": "src/client/index.ts",\n    "server": "src/server.ts"\n  }\n}\n')),Object(i.b)("p",null,"Defaults to ",Object(i.b)("inlineCode",{parentName:"p"},'{ "index": "src/index.ts" }')," if not defined. If you're ",Object(i.b)("em",{parentName:"p"},"not")," using TypeScript, you will\nneed to configure this."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"These inputs can be automatically mapped to ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," ",Object(i.b)("inlineCode",{parentName:"p"},"exports")," using the ",Object(i.b)("inlineCode",{parentName:"p"},"--addExports")," CLI\noption. Do note that this feature is still experimental.")),Object(i.b)("h2",{id:"namespace"},"Namespace"),Object(i.b)("p",null,"For browsers only, this would be the name of the UMD global variable."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "namespace": "Packemon"\n}\n')))}p.isMDXComponent=!0}}]);