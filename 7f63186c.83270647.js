(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{79:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return b})),t.d(n,"default",(function(){return s}));var a=t(3),i=t(7),l=(t(0),t(89)),r={title:"Build",sidebar_label:"build"},o={unversionedId:"build",id:"build",isDocsHomePage:!1,title:"Build",description:"Packemon was primarily designed and engineered for building packages. But what is building you ask?",source:"@site/docs/build.md",slug:"/build",permalink:"/docs/build",editUrl:"https://github.com/milesj/packemon/edit/master/website/docs/build.md",version:"current",sidebar_label:"build",sidebar:"docs",previous:{title:"Package configuration",permalink:"/docs/config"},next:{title:"Clean",permalink:"/docs/clean"}},b=[{value:"Options",id:"options",children:[]},{value:"How it works",id:"how-it-works",children:[]},{value:"Babel configuration",id:"babel-configuration",children:[{value:"Presets",id:"presets",children:[]},{value:"Plugins",id:"plugins",children:[]}]},{value:"Rollup configuration",id:"rollup-configuration",children:[{value:"Plugins",id:"plugins-1",children:[]}]}],c={toc:b};function s(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Packemon was primarily designed and engineered for building packages. But what is building you ask?\nBuilding is the process of parsing, transforming, and bundling a package's source code into\ndistributable and consumable files for NPM, using community favorite tools like ",Object(l.b)("a",{parentName:"p",href:"https://babeljs.io"},"Babel")," and\n",Object(l.b)("a",{parentName:"p",href:"https://rollupjs.org"},"Rollup"),"."),Object(l.b)("p",null,"With that being said, the ",Object(l.b)("inlineCode",{parentName:"p"},"build")," command can be used to build all packages in a project according\nto their configured build targets (platform, formats, etc)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "scripts": {\n    "build": "packemon build --addEngines"\n  }\n}\n')),Object(l.b)("h2",{id:"options"},"Options"),Object(l.b)("p",null,"Build supports the following command line options."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--addEngines")," - Add Node.js and NPM ",Object(l.b)("inlineCode",{parentName:"li"},"engine")," versions to each ",Object(l.b)("inlineCode",{parentName:"li"},"package.json")," when ",Object(l.b)("inlineCode",{parentName:"li"},"platform")," is\n",Object(l.b)("inlineCode",{parentName:"li"},"node"),". Uses the ",Object(l.b)("inlineCode",{parentName:"li"},"support")," setting to determine the version range."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--addExports")," - Add ",Object(l.b)("inlineCode",{parentName:"li"},"exports")," fields to each ",Object(l.b)("inlineCode",{parentName:"li"},"package.json")," according to the respective ",Object(l.b)("inlineCode",{parentName:"li"},"inputs"),"\nsetting. This is an experimental Node.js feature and may not work correctly\n(",Object(l.b)("a",{parentName:"li",href:"https://nodejs.org/api/packages.html#packages_package_entry_points"},"more information"),")."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--analyze")," - Analyze and visualize all generated builds. Will open a browser visualization for\neach bundle in one of the following formats.",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"sunburst")," - Displays an inner circle surrounded by rings of deeper hierarchy levels."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"treemap")," - Displays hierarchy levels as top-level and nested rectangles of varying size."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"network")," - Displays files as nodes with the relationship between files."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--concurrency")," - Number of builds to run in parallel. Defaults to operating system CPU count."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--declaration")," - Generate TypeScript declarations for each package. Accepts one of the following\nvalues.",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"standard")," - Generates multiple ",Object(l.b)("inlineCode",{parentName:"li"},"d.ts")," files with ",Object(l.b)("inlineCode",{parentName:"li"},"tsc"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"api")," - Generates a single ",Object(l.b)("inlineCode",{parentName:"li"},"d.ts")," file for each input. Uses\n",Object(l.b)("a",{parentName:"li",href:"https://www.npmjs.com/package/@microsoft/api-extractor"},"@microsoft/api-extractor")," to ",Object(l.b)("em",{parentName:"li"},"only"),"\ngenerate the public API. ",Object(l.b)("em",{parentName:"li"},"(NOTE: this is quite slow)")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--filterPackages"),", ",Object(l.b)("inlineCode",{parentName:"li"},"-p")," - Filter packages to build based on their name in ",Object(l.b)("inlineCode",{parentName:"li"},"package.json"),".\nSupports standard patterns (",Object(l.b)("inlineCode",{parentName:"li"},"foo-*"),") and comma separated lists (",Object(l.b)("inlineCode",{parentName:"li"},"foo,bar"),")."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--skipPrivate")," - Skip ",Object(l.b)("inlineCode",{parentName:"li"},"private")," packages from being built."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--timeout")," - Timeout in milliseconds before a build is cancelled. Defaults to no timeout.")),Object(l.b)("h2",{id:"how-it-works"},"How it works"),Object(l.b)("p",null,"When the build process is ran, Packemon will find all viable packages within the current project and\ngenerate build artifacts. A build artifact is an output file that ",Object(l.b)("em",{parentName:"p"},"will be")," distributed with the NPM\npackage, but ",Object(l.b)("em",{parentName:"p"},"will ",Object(l.b)("strong",{parentName:"em"},"not")," be")," committed to the project (ideally git ignored)."),Object(l.b)("p",null,"To demonstrate this, let's assume we have a package with the following folder structure and file\ncontents (not exhaustive)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"/\n\u251c\u2500\u2500 src/\n|   \u251c\u2500\u2500 index.ts\n|   \u2514\u2500\u2500 *.ts\n\u251c\u2500\u2500 tests/\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 LICENSE\n\u2514\u2500\u2500 README.md\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "name": "package",\n  "packemon": {\n    "inputs": { "index": "src/index.ts" },\n    "platform": ["node", "browser"],\n    "formats": ["lib", "esm", "umd"],\n    "namespace": "Example"\n  }\n}\n')),Object(l.b)("p",null,"Based on the package configuration above, our build will target both Node.js and web browsers, while\ngenerating multiple ",Object(l.b)("inlineCode",{parentName:"p"},"index")," outputs across both platforms. The resulting folder structure will look\nlike the following (when also using ",Object(l.b)("inlineCode",{parentName:"p"},"--declaration"),")."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"/\n\u251c\u2500\u2500 dts/\n|   \u2514\u2500\u2500 index.d.ts\n\u251c\u2500\u2500 esm/\n|   \u2514\u2500\u2500 index.js\n\u251c\u2500\u2500 lib/\n|   \u2514\u2500\u2500 browser/index.js\n|   \u2514\u2500\u2500 node/index.js\n\u251c\u2500\u2500 src/\n|   \u251c\u2500\u2500 index.ts\n|   \u2514\u2500\u2500 *.ts\n\u251c\u2500\u2500 tests/\n\u251c\u2500\u2500 umd/\n|   \u2514\u2500\u2500 index.js\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 LICENSE\n\u2514\u2500\u2500 README.md\n")),Object(l.b)("p",null,"Furthermore, the ",Object(l.b)("inlineCode",{parentName:"p"},"package.json")," will automatically be updated with our build artifact entry points\nand files list, as demonstrated below. This can further be expanded upon using the ",Object(l.b)("inlineCode",{parentName:"p"},"--addEngines"),"\nand ",Object(l.b)("inlineCode",{parentName:"p"},"--addExports")," options."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "name": "package",\n  "main": "./lib/index.js",\n  "module": "./esm/index.js",\n  "browser": "./umd/index.js",\n  "types": "./dts/index.d.ts",\n  "files": ["dts/", "esm/", "lib/", "src/", "umd/"],\n  "packemon": {\n    "inputs": { "index": "src/index.ts" },\n    "platform": ["node", "browser"],\n    "formats": ["lib", "esm", "umd"],\n    "namespace": "Example"\n  }\n}\n')),Object(l.b)("p",null,"Amazing, we now have self-contained and tree-shaken build artifacts for consumption. However, to\nensure ",Object(l.b)("em",{parentName:"p"},"only")," build artifacts are packaged and distributed to NPM, we rely on the ",Object(l.b)("inlineCode",{parentName:"p"},"package.json"),"\n",Object(l.b)("inlineCode",{parentName:"p"},"files")," property. Based on the list above, the files published to NPM would be the following (pretty\nmuch everything except tests)."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"/\n\u251c\u2500\u2500 dts/\n\u251c\u2500\u2500 esm/\n\u251c\u2500\u2500 lib/\n\u251c\u2500\u2500 src/\n\u251c\u2500\u2500 umd/\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 LICENSE\n\u2514\u2500\u2500 README.md\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Why are source files published? For source maps! Packemon will always generate source maps\nregardless of format, and the ",Object(l.b)("inlineCode",{parentName:"p"},"src")," directory is necessary for proper linking.")),Object(l.b)("h2",{id:"babel-configuration"},"Babel configuration"),Object(l.b)("p",null,"All packages are parsed and transpiled with ",Object(l.b)("a",{parentName:"p",href:"https://babeljs.io"},"Babel")," (through Rollup). The presets and plugins\nused are automatically determined on a package-by-package basis, by inspecting the package's root\nfiles and respective ",Object(l.b)("inlineCode",{parentName:"p"},"package.json")," (and root ",Object(l.b)("inlineCode",{parentName:"p"},"package.json")," if using workspaces)."),Object(l.b)("h3",{id:"presets"},"Presets"),Object(l.b)("p",null,"The environment preset is always enabled and configures the following."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@babel/preset-env"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Defines ",Object(l.b)("inlineCode",{parentName:"li"},"modules")," and ",Object(l.b)("inlineCode",{parentName:"li"},"targets")," based on the chosen ",Object(l.b)("a",{parentName:"li",href:"/docs/config#platforms"},"platform")," and\n",Object(l.b)("a",{parentName:"li",href:"/docs/config#formats"},"format"),"."),Object(l.b)("li",{parentName:"ul"},"Enables ",Object(l.b)("inlineCode",{parentName:"li"},"spec")," in development for testing compliance."),Object(l.b)("li",{parentName:"ul"},"Enables ",Object(l.b)("inlineCode",{parentName:"li"},"loose")," in production for smaller file sizes."),Object(l.b)("li",{parentName:"ul"},"Enables ",Object(l.b)("inlineCode",{parentName:"li"},"bugfixes")," and ",Object(l.b)("inlineCode",{parentName:"li"},"shippedProposals")," for smaller file sizes."),Object(l.b)("li",{parentName:"ul"},"Disables ",Object(l.b)("inlineCode",{parentName:"li"},"useBuiltIns")," as consumers of the package should polyfill accordingly.")))),Object(l.b)("p",null,"The following presets are enabled when one of their conditions are met."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@babel/preset-flow"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Package or root contains a ",Object(l.b)("inlineCode",{parentName:"li"},"flow-bin")," dependency."),Object(l.b)("li",{parentName:"ul"},"Project contains a ",Object(l.b)("inlineCode",{parentName:"li"},".flowconfig"),"."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@babel/preset-typescript"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Package or root contains a ",Object(l.b)("inlineCode",{parentName:"li"},"typescript")," dependency."),Object(l.b)("li",{parentName:"ul"},"Package contains a ",Object(l.b)("inlineCode",{parentName:"li"},"tsconfig.json"),"."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@babel/preset-react"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Package or root contains a ",Object(l.b)("inlineCode",{parentName:"li"},"react")," dependency.")))),Object(l.b)("h3",{id:"plugins"},"Plugins"),Object(l.b)("p",null,"The following plugins are enabled when one of their conditions are met."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@babel/plugin-proposal-decorators"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Enabled when package is TypeScript aware and defines ",Object(l.b)("inlineCode",{parentName:"li"},"experimentalDecorators")," in\n",Object(l.b)("inlineCode",{parentName:"li"},"tsconfig.json"),"."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@babel/plugin-transform-runtime"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Enabled when package ",Object(l.b)("a",{parentName:"li",href:"/docs/config#platforms"},"platform")," is configured to ",Object(l.b)("inlineCode",{parentName:"li"},"browser")," or ",Object(l.b)("inlineCode",{parentName:"li"},"native"),".\nWill transform generators to ",Object(l.b)("inlineCode",{parentName:"li"},"regnerator-runtime")," for legacy versions."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"babel-plugin-transform-async-to-promises"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Enabled when package ",Object(l.b)("a",{parentName:"li",href:"/docs/config#platforms"},"platform")," is configured to ",Object(l.b)("inlineCode",{parentName:"li"},"browser")," or ",Object(l.b)("inlineCode",{parentName:"li"},"native"),".\nWill transform async/await to promises for legacy versions."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("em",{parentName:"li"},"Custom"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Always enabled. Will transform ",Object(l.b)("inlineCode",{parentName:"li"},"__DEV__"),", ",Object(l.b)("inlineCode",{parentName:"li"},"__PROD__"),", and ",Object(l.b)("inlineCode",{parentName:"li"},"__TEST__")," to ",Object(l.b)("inlineCode",{parentName:"li"},"process.env.NODE_ENV"),"\nconditionals.")))),Object(l.b)("h2",{id:"rollup-configuration"},"Rollup configuration"),Object(l.b)("p",null,"While Babel handles the parsing and transformation of source files, ",Object(l.b)("a",{parentName:"p",href:"https://rollupjs.org"},"Rollup")," bundles all\nentry point dependent source files into a single tree-shaken distributable file. This vastly reduces\nthe file size, require/import times, evaluation speed, and more."),Object(l.b)("p",null,'However, configuring Rollup can be quite daunting. Because of this, the entire layer is abstracted\naway behind Packemon, and should just "work" when packages are configured correctly. Our abstraction\nabides the following:'),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"For every input in a package's ",Object(l.b)("a",{parentName:"li",href:"/docs/config#inputs"},"inputs")," setting, an output file will be\ncreated."),Object(l.b)("li",{parentName:"ul"},"For every ",Object(l.b)("a",{parentName:"li",href:"/docs/config#platforms"},"platform")," and ",Object(l.b)("a",{parentName:"li",href:"/docs/config#formats"},"format")," in a package, a\nunique output file will be created."),Object(l.b)("li",{parentName:"ul"},"Every Node.js built-in module is configured as external."),Object(l.b)("li",{parentName:"ul"},"Every package dependency is configured as external."),Object(l.b)("li",{parentName:"ul"},"Always reduces file size as much as possible by utilizing tree-shaking."),Object(l.b)("li",{parentName:"ul"},'Allows input files to reference other input files to mitigate "instance of" and "reference"\nissues.')),Object(l.b)("h3",{id:"plugins-1"},"Plugins"),Object(l.b)("p",null,"The following plugins are enabled per package."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@rollup/plugin-node-resolve"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Resolves imports using Node.js module resolution."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@rollup/plugin-commonjs"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Converts CommonJS externals to ECMAScript for bundling capabilities."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@rollup/plugin-json"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Allows JSON files to be imported (default export only)."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@rollup/plugin-babel"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Parses and transforms source code using Babel."),Object(l.b)("li",{parentName:"ul"},"Excludes test related files from transformation."),Object(l.b)("li",{parentName:"ul"},"Inlines runtime helpers in the output file."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"rollup-plugin-node-externals"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Defines ",Object(l.b)("inlineCode",{parentName:"li"},"externals")," based on ",Object(l.b)("inlineCode",{parentName:"li"},"package.json")," dependencies."),Object(l.b)("li",{parentName:"ul"},"Includes ",Object(l.b)("inlineCode",{parentName:"li"},"dependencies"),", ",Object(l.b)("inlineCode",{parentName:"li"},"devDependencies"),", ",Object(l.b)("inlineCode",{parentName:"li"},"peerDependencies"),", and ",Object(l.b)("inlineCode",{parentName:"li"},"optionalDependencies"),"."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"rollup-plugin-polyfill-node"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Polyfills Node.js built-in modules when platform is ",Object(l.b)("inlineCode",{parentName:"li"},"browser")," or ",Object(l.b)("inlineCode",{parentName:"li"},"native"),"."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"rollup-plugin-visualizer"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Analyzes and generates a bundle size visualizer.")))))}s.isMDXComponent=!0},89:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),i=t.n(a);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),s=function(e){var n=i.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return i.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},u=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),p=s(t),u=a,m=p["".concat(r,".").concat(u)]||p[u]||d[u]||l;return t?i.a.createElement(m,o(o({ref:n},c),{},{components:t})):i.a.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,r=new Array(l);r[0]=u;var o={};for(var b in n)hasOwnProperty.call(n,b)&&(o[b]=n[b]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var c=2;c<l;c++)r[c]=t[c];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);